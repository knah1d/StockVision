{"ast":null,"code":"var _jsxFileName = \"/home/nahid/Desktop/6th_SEM/AI/StockVision/stockvision-app/src/components/SectorAnalysis.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Bar, Doughnut } from 'react-chartjs-2';\nimport ApiService from '../services/apiService';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SectorAnalysis = () => {\n  _s();\n  const [sectorData, setSectorData] = useState(null);\n  const [days, setDays] = useState(90);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const barChartRef = useRef(null);\n  const pieChartRef = useRef(null);\n  useEffect(() => {\n    loadSectorAnalysis();\n\n    // Cleanup function\n    return () => {\n      // Copy refs to variables to avoid stale closure warnings\n      const barChart = barChartRef.current;\n      const pieChart = pieChartRef.current;\n      if (barChart) {\n        barChart.destroy();\n      }\n      if (pieChart) {\n        pieChart.destroy();\n      }\n    };\n  }, []);\n  const loadSectorAnalysis = async (daysParam = days) => {\n    try {\n      setLoading(true);\n      setError(null);\n      const data = await ApiService.getSectorOverview(daysParam);\n      setSectorData(data);\n    } catch (err) {\n      setError('Failed to load sector analysis');\n      console.error('Sector analysis error:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleDaysChange = newDays => {\n    setDays(newDays);\n    loadSectorAnalysis();\n  };\n\n  // Sector performance bar chart\n  const sectorPerformanceData = sectorData ? {\n    labels: sectorData.sector_performance.map(item => item.sector),\n    datasets: [{\n      label: 'Average Return (%)',\n      data: sectorData.sector_performance.map(item => item.avg_return * 100),\n      backgroundColor: sectorData.sector_performance.map((_, index) => {\n        const colors = ['#667eea', '#f39c12', '#27ae60', '#e74c3c', '#9b59b6', '#1abc9c', '#f1c40f', '#e67e22'];\n        return colors[index % colors.length];\n      }),\n      borderColor: 'rgba(255, 255, 255, 0.8)',\n      borderWidth: 2\n    }]\n  } : null;\n\n  // Market cap distribution pie chart\n  const marketCapData = sectorData ? {\n    labels: sectorData.sector_stats.map(item => item.sector),\n    datasets: [{\n      data: sectorData.sector_stats.map(item => item.total_market_cap),\n      backgroundColor: ['#667eea', '#f39c12', '#27ae60', '#e74c3c', '#9b59b6', '#1abc9c', '#f1c40f', '#e67e22', '#95a5a6', '#34495e'],\n      borderColor: '#fff',\n      borderWidth: 2\n    }]\n  } : null;\n  const barChartOptions = {\n    responsive: true,\n    plugins: {\n      legend: {\n        display: false\n      },\n      tooltip: {\n        callbacks: {\n          label: function (context) {\n            return `${context.dataset.label}: ${context.parsed.y.toFixed(2)}%`;\n          }\n        }\n      }\n    },\n    scales: {\n      y: {\n        beginAtZero: true,\n        title: {\n          display: true,\n          text: 'Average Return (%)'\n        }\n      }\n    }\n  };\n  const pieChartOptions = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'right',\n        labels: {\n          generateLabels: function (chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              return data.labels.map((label, i) => {\n                const value = data.datasets[0].data[i];\n                const percentage = (value / data.datasets[0].data.reduce((a, b) => a + b, 0) * 100).toFixed(1);\n                return {\n                  text: `${label} (${percentage}%)`,\n                  fillStyle: data.datasets[0].backgroundColor[i],\n                  strokeStyle: data.datasets[0].borderColor,\n                  lineWidth: data.datasets[0].borderWidth,\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        }\n      },\n      tooltip: {\n        callbacks: {\n          label: function (context) {\n            const label = context.label;\n            const value = context.parsed;\n            const total = context.dataset.data.reduce((a, b) => a + b, 0);\n            const percentage = (value / total * 100).toFixed(1);\n            return `${label}: à§³${(value / 1000000).toFixed(1)}M (${percentage}%)`;\n          }\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sector-analysis\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"card-title\",\n          children: \"\\uD83C\\uDFE2 Sector Analysis\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sector-controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-label\",\n            children: \"Analysis Period:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"form-select\",\n            value: days,\n            onChange: e => handleDaysChange(parseInt(e.target.value)),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: 30,\n              children: \"Last 30 days\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: 90,\n              children: \"Last 3 months\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: 180,\n              children: \"Last 6 months\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: 365,\n              children: \"Last 1 year\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\uD83D\\uDD04 Loading sector analysis...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 9\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center text-danger\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"\\u26A0\\uFE0F \", error]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: loadSectorAnalysis,\n          className: \"button-primary\",\n          children: \"\\uD83D\\uDD04 Retry\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 9\n    }, this), sectorData && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-header\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"card-title\",\n            children: \"\\uD83D\\uDCCA Sector Performance Overview\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sector-overview\",\n          children: sectorData.sector_performance.map((sector, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sector-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"sector-icon\",\n              children: getSectorIcon(sector.sector)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"sector-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"sector-name\",\n                children: sector.sector\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `sector-return ${sector.avg_return >= 0 ? 'positive' : 'negative'}`,\n                children: [sector.avg_return >= 0 ? '+' : '', (sector.avg_return * 100).toFixed(2), \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"sector-stocks\",\n                children: [sector.stock_count, \" stocks\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 19\n            }, this)]\n          }, sector.sector, true, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-grid\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-header\",\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"card-title\",\n              children: \"\\uD83D\\uDCC8 Average Returns by Sector\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 15\n          }, this), sectorPerformanceData && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chart-container\",\n            children: /*#__PURE__*/_jsxDEV(Bar, {\n              ref: barChartRef,\n              data: sectorPerformanceData,\n              options: barChartOptions\n            }, `bar-chart-${days}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-header\",\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"card-title\",\n              children: \"\\uD83D\\uDCB0 Market Cap Distribution\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 15\n          }, this), marketCapData && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chart-container\",\n            children: /*#__PURE__*/_jsxDEV(Doughnut, {\n              ref: pieChartRef,\n              data: marketCapData,\n              options: pieChartOptions\n            }, `doughnut-chart-${days}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-header\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"card-title\",\n            children: \"\\uD83C\\uDF1F Sector Statistics\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sector-stats-grid\",\n          children: sectorData.sector_stats.map(sector => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stats-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stats-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"stats-sector\",\n                children: sector.sector\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"stats-icon\",\n                children: getSectorIcon(sector.sector)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stats-metrics\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"stats-metric\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"metric-label\",\n                  children: \"Companies:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 254,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"metric-value\",\n                  children: sector.company_count\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 255,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"stats-metric\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"metric-label\",\n                  children: \"Avg Market Cap:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 258,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"metric-value\",\n                  children: [\"\\u09F3\", (sector.avg_market_cap / 1000000).toFixed(1), \"M\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 259,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 257,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"stats-metric\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"metric-label\",\n                  children: \"Total Market Cap:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 262,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"metric-value\",\n                  children: [\"\\u09F3\", (sector.total_market_cap / 1000000).toFixed(1), \"M\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 263,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 261,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"stats-metric\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"metric-label\",\n                  children: \"Avg Volatility:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 266,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"metric-value\",\n                  children: [(sector.avg_volatility * 100).toFixed(2), \"%\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 267,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 19\n            }, this)]\n          }, sector.sector, true, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-header\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"card-title\",\n            children: \"\\uD83C\\uDFC6 Top Performers by Sector\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"top-performers-grid\",\n          children: sectorData.top_performers.map(sector => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"performers-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"performers-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: sector.sector\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 283,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"sector-emoji\",\n                children: getSectorIcon(sector.sector)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"performers-list\",\n              children: sector.top_stocks.map((stock, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"performer-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"performer-rank\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"rank-emoji\",\n                    children: index === 0 ? 'ð¥' : index === 1 ? 'ð¥' : 'ð¥'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 290,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"performer-ticker\",\n                    children: stock.ticker\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 293,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 289,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `performer-return ${stock.return >= 0 ? 'positive' : 'negative'}`,\n                  children: [stock.return >= 0 ? '+' : '', (stock.return * 100).toFixed(2), \"%\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 295,\n                  columnNumber: 25\n                }, this)]\n              }, stock.ticker, true, {\n                fileName: _jsxFileName,\n                lineNumber: 288,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 19\n            }, this)]\n          }, sector.sector, true, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"style\", {\n      jsx: true,\n      children: `\n        .sector-controls {\n          display: flex;\n          align-items: center;\n          gap: 1rem;\n        }\n\n        .sector-overview {\n          display: grid;\n          grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n          gap: 1rem;\n        }\n\n        .sector-card {\n          display: flex;\n          align-items: center;\n          gap: 1rem;\n          background: #f8f9fa;\n          border-radius: 8px;\n          padding: 1rem;\n          border-left: 4px solid #667eea;\n        }\n\n        .sector-icon {\n          font-size: 2rem;\n          min-width: 50px;\n          text-align: center;\n        }\n\n        .sector-info {\n          flex: 1;\n        }\n\n        .sector-name {\n          font-weight: 600;\n          color: #2c3e50;\n          margin-bottom: 0.25rem;\n        }\n\n        .sector-return {\n          font-size: 1.2rem;\n          font-weight: 700;\n          margin-bottom: 0.25rem;\n        }\n\n        .sector-return.positive {\n          color: #27ae60;\n        }\n\n        .sector-return.negative {\n          color: #e74c3c;\n        }\n\n        .sector-stocks {\n          font-size: 0.9rem;\n          color: #6c757d;\n        }\n\n        .chart-grid {\n          display: grid;\n          grid-template-columns: repeat(auto-fit, minmax(400px, 1fr));\n          gap: 1.5rem;\n        }\n\n        .chart-container {\n          margin: 1rem 0;\n          height: 400px;\n        }\n\n        .sector-stats-grid {\n          display: grid;\n          grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\n          gap: 1rem;\n        }\n\n        .stats-card {\n          background: #f8f9fa;\n          border-radius: 8px;\n          padding: 1rem;\n          border: 1px solid #dee2e6;\n        }\n\n        .stats-header {\n          display: flex;\n          justify-content: space-between;\n          align-items: center;\n          margin-bottom: 1rem;\n        }\n\n        .stats-sector {\n          font-weight: 600;\n          color: #2c3e50;\n          font-size: 1.1rem;\n        }\n\n        .stats-icon {\n          font-size: 1.5rem;\n        }\n\n        .stats-metrics {\n          display: flex;\n          flex-direction: column;\n          gap: 0.5rem;\n        }\n\n        .stats-metric {\n          display: flex;\n          justify-content: space-between;\n          align-items: center;\n        }\n\n        .metric-label {\n          color: #6c757d;\n          font-size: 0.9rem;\n        }\n\n        .metric-value {\n          font-weight: 600;\n          color: #2c3e50;\n        }\n\n        .top-performers-grid {\n          display: grid;\n          grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\n          gap: 1rem;\n        }\n\n        .performers-card {\n          background: #f8f9fa;\n          border-radius: 8px;\n          padding: 1rem;\n          border: 1px solid #dee2e6;\n        }\n\n        .performers-header {\n          display: flex;\n          justify-content: space-between;\n          align-items: center;\n          margin-bottom: 1rem;\n          padding-bottom: 0.5rem;\n          border-bottom: 1px solid #dee2e6;\n        }\n\n        .performers-header h4 {\n          margin: 0;\n          color: #2c3e50;\n        }\n\n        .sector-emoji {\n          font-size: 1.5rem;\n        }\n\n        .performers-list {\n          display: flex;\n          flex-direction: column;\n          gap: 0.75rem;\n        }\n\n        .performer-item {\n          display: flex;\n          justify-content: space-between;\n          align-items: center;\n          padding: 0.5rem;\n          background: white;\n          border-radius: 6px;\n        }\n\n        .performer-rank {\n          display: flex;\n          align-items: center;\n          gap: 0.5rem;\n        }\n\n        .rank-emoji {\n          font-size: 1.2rem;\n        }\n\n        .performer-ticker {\n          font-weight: 600;\n          color: #2c3e50;\n        }\n\n        .performer-return {\n          font-weight: 600;\n        }\n\n        .performer-return.positive {\n          color: #27ae60;\n        }\n\n        .performer-return.negative {\n          color: #e74c3c;\n        }\n\n        @media (max-width: 768px) {\n          .sector-controls {\n            flex-direction: column;\n            align-items: stretch;\n          }\n          \n          .chart-grid {\n            grid-template-columns: 1fr;\n          }\n          \n          .sector-overview {\n            grid-template-columns: 1fr;\n          }\n          \n          .sector-stats-grid {\n            grid-template-columns: 1fr;\n          }\n          \n          .top-performers-grid {\n            grid-template-columns: 1fr;\n          }\n        }\n      `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 5\n  }, this);\n};\n\n// Helper function to get sector icons\n_s(SectorAnalysis, \"twNBcTSYy2sfVcI9d1n1MUg4xGA=\");\n_c = SectorAnalysis;\nconst getSectorIcon = sector => {\n  const sectorIcons = {\n    'Bank': 'ð¦',\n    'Pharmaceutical': 'ð',\n    'Food & Beverage': 'ð½ï¸',\n    'Textile': 'ð',\n    'Cement': 'ðï¸',\n    'Insurance': 'ð¡ï¸',\n    'Engineering': 'âï¸',\n    'IT': 'ð»',\n    'Telecoms': 'ð¡',\n    'Power': 'â¡',\n    'Paper': 'ð',\n    'Ceramic': 'ðº',\n    'Travel': 'âï¸',\n    'Miscellaneous': 'ð¦',\n    'Fuel & Power': 'â½',\n    'Jute': 'ð¾',\n    'Tannery': 'ð',\n    'Services': 'ð§',\n    'Financial Institution': 'ð°',\n    'Mutual Fund': 'ð'\n  };\n  return sectorIcons[sector] || 'ð¢';\n};\nexport default SectorAnalysis;\nvar _c;\n$RefreshReg$(_c, \"SectorAnalysis\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Bar","Doughnut","ApiService","jsxDEV","_jsxDEV","Fragment","_Fragment","SectorAnalysis","_s","sectorData","setSectorData","days","setDays","loading","setLoading","error","setError","barChartRef","pieChartRef","loadSectorAnalysis","barChart","current","pieChart","destroy","daysParam","data","getSectorOverview","err","console","handleDaysChange","newDays","sectorPerformanceData","labels","sector_performance","map","item","sector","datasets","label","avg_return","backgroundColor","_","index","colors","length","borderColor","borderWidth","marketCapData","sector_stats","total_market_cap","barChartOptions","responsive","plugins","legend","display","tooltip","callbacks","context","dataset","parsed","y","toFixed","scales","beginAtZero","title","text","pieChartOptions","position","generateLabels","chart","i","value","percentage","reduce","a","b","fillStyle","strokeStyle","lineWidth","total","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","parseInt","target","onClick","getSectorIcon","stock_count","ref","options","company_count","avg_market_cap","avg_volatility","top_performers","top_stocks","stock","ticker","return","jsx","_c","sectorIcons","$RefreshReg$"],"sources":["/home/nahid/Desktop/6th_SEM/AI/StockVision/stockvision-app/src/components/SectorAnalysis.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { Bar, Doughnut } from 'react-chartjs-2';\nimport ApiService from '../services/apiService';\n\nconst SectorAnalysis = () => {\n  const [sectorData, setSectorData] = useState(null);\n  const [days, setDays] = useState(90);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const barChartRef = useRef(null);\n  const pieChartRef = useRef(null);\n\n  useEffect(() => {\n    loadSectorAnalysis();\n    \n    // Cleanup function\n    return () => {\n      // Copy refs to variables to avoid stale closure warnings\n      const barChart = barChartRef.current;\n      const pieChart = pieChartRef.current;\n      \n      if (barChart) {\n        barChart.destroy();\n      }\n      if (pieChart) {\n        pieChart.destroy();\n      }\n    };\n  }, []);\n\n  const loadSectorAnalysis = async (daysParam = days) => {\n    try {\n      setLoading(true);\n      setError(null);\n      const data = await ApiService.getSectorOverview(daysParam);\n      setSectorData(data);\n    } catch (err) {\n      setError('Failed to load sector analysis');\n      console.error('Sector analysis error:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleDaysChange = (newDays) => {\n    setDays(newDays);\n    loadSectorAnalysis();\n  };\n\n  // Sector performance bar chart\n  const sectorPerformanceData = sectorData ? {\n    labels: sectorData.sector_performance.map(item => item.sector),\n    datasets: [{\n      label: 'Average Return (%)',\n      data: sectorData.sector_performance.map(item => item.avg_return * 100),\n      backgroundColor: sectorData.sector_performance.map((_, index) => {\n        const colors = ['#667eea', '#f39c12', '#27ae60', '#e74c3c', '#9b59b6', '#1abc9c', '#f1c40f', '#e67e22'];\n        return colors[index % colors.length];\n      }),\n      borderColor: 'rgba(255, 255, 255, 0.8)',\n      borderWidth: 2,\n    }],\n  } : null;\n\n  // Market cap distribution pie chart\n  const marketCapData = sectorData ? {\n    labels: sectorData.sector_stats.map(item => item.sector),\n    datasets: [{\n      data: sectorData.sector_stats.map(item => item.total_market_cap),\n      backgroundColor: [\n        '#667eea', '#f39c12', '#27ae60', '#e74c3c', '#9b59b6', \n        '#1abc9c', '#f1c40f', '#e67e22', '#95a5a6', '#34495e'\n      ],\n      borderColor: '#fff',\n      borderWidth: 2,\n    }],\n  } : null;\n\n  const barChartOptions = {\n    responsive: true,\n    plugins: {\n      legend: {\n        display: false,\n      },\n      tooltip: {\n        callbacks: {\n          label: function(context) {\n            return `${context.dataset.label}: ${context.parsed.y.toFixed(2)}%`;\n          }\n        }\n      }\n    },\n    scales: {\n      y: {\n        beginAtZero: true,\n        title: {\n          display: true,\n          text: 'Average Return (%)',\n        },\n      },\n    },\n  };\n\n  const pieChartOptions = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'right',\n        labels: {\n          generateLabels: function(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              return data.labels.map((label, i) => {\n                const value = data.datasets[0].data[i];\n                const percentage = ((value / data.datasets[0].data.reduce((a, b) => a + b, 0)) * 100).toFixed(1);\n                return {\n                  text: `${label} (${percentage}%)`,\n                  fillStyle: data.datasets[0].backgroundColor[i],\n                  strokeStyle: data.datasets[0].borderColor,\n                  lineWidth: data.datasets[0].borderWidth,\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        }\n      },\n      tooltip: {\n        callbacks: {\n          label: function(context) {\n            const label = context.label;\n            const value = context.parsed;\n            const total = context.dataset.data.reduce((a, b) => a + b, 0);\n            const percentage = ((value / total) * 100).toFixed(1);\n            return `${label}: à§³${(value / 1000000).toFixed(1)}M (${percentage}%)`;\n          }\n        }\n      }\n    },\n  };\n\n  return (\n    <div className=\"sector-analysis\">\n      <div className=\"card\">\n        <div className=\"card-header\">\n          <h2 className=\"card-title\">ð¢ Sector Analysis</h2>\n          <div className=\"sector-controls\">\n            <label className=\"form-label\">Analysis Period:</label>\n            <select\n              className=\"form-select\"\n              value={days}\n              onChange={(e) => handleDaysChange(parseInt(e.target.value))}\n            >\n              <option value={30}>Last 30 days</option>\n              <option value={90}>Last 3 months</option>\n              <option value={180}>Last 6 months</option>\n              <option value={365}>Last 1 year</option>\n            </select>\n          </div>\n        </div>\n      </div>\n\n      {loading && (\n        <div className=\"card\">\n          <div className=\"text-center\">\n            <h3>ð Loading sector analysis...</h3>\n          </div>\n        </div>\n      )}\n\n      {error && (\n        <div className=\"card\">\n          <div className=\"text-center text-danger\">\n            <h3>â ï¸ {error}</h3>\n            <button onClick={loadSectorAnalysis} className=\"button-primary\">\n              ð Retry\n            </button>\n          </div>\n        </div>\n      )}\n\n      {sectorData && (\n        <>\n          <div className=\"card\">\n            <div className=\"card-header\">\n              <h3 className=\"card-title\">ð Sector Performance Overview</h3>\n            </div>\n            <div className=\"sector-overview\">\n              {sectorData.sector_performance.map((sector, index) => (\n                <div key={sector.sector} className=\"sector-card\">\n                  <div className=\"sector-icon\">\n                    {getSectorIcon(sector.sector)}\n                  </div>\n                  <div className=\"sector-info\">\n                    <div className=\"sector-name\">{sector.sector}</div>\n                    <div className={`sector-return ${sector.avg_return >= 0 ? 'positive' : 'negative'}`}>\n                      {sector.avg_return >= 0 ? '+' : ''}{(sector.avg_return * 100).toFixed(2)}%\n                    </div>\n                    <div className=\"sector-stocks\">{sector.stock_count} stocks</div>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n\n          <div className=\"chart-grid\">\n            <div className=\"card\">\n              <div className=\"card-header\">\n                <h3 className=\"card-title\">ð Average Returns by Sector</h3>\n              </div>\n              {sectorPerformanceData && (\n                <div className=\"chart-container\">\n                  <Bar \n                    ref={barChartRef}\n                    data={sectorPerformanceData} \n                    options={barChartOptions}\n                    key={`bar-chart-${days}`}\n                  />\n                </div>\n              )}\n            </div>\n\n            <div className=\"card\">\n              <div className=\"card-header\">\n                <h3 className=\"card-title\">ð° Market Cap Distribution</h3>\n              </div>\n              {marketCapData && (\n                <div className=\"chart-container\">\n                  <Doughnut \n                    ref={pieChartRef}\n                    data={marketCapData} \n                    options={pieChartOptions}\n                    key={`doughnut-chart-${days}`}\n                  />\n                </div>\n              )}\n            </div>\n          </div>\n\n          <div className=\"card\">\n            <div className=\"card-header\">\n              <h3 className=\"card-title\">ð Sector Statistics</h3>\n            </div>\n            <div className=\"sector-stats-grid\">\n              {sectorData.sector_stats.map((sector) => (\n                <div key={sector.sector} className=\"stats-card\">\n                  <div className=\"stats-header\">\n                    <div className=\"stats-sector\">{sector.sector}</div>\n                    <div className=\"stats-icon\">{getSectorIcon(sector.sector)}</div>\n                  </div>\n                  <div className=\"stats-metrics\">\n                    <div className=\"stats-metric\">\n                      <span className=\"metric-label\">Companies:</span>\n                      <span className=\"metric-value\">{sector.company_count}</span>\n                    </div>\n                    <div className=\"stats-metric\">\n                      <span className=\"metric-label\">Avg Market Cap:</span>\n                      <span className=\"metric-value\">à§³{(sector.avg_market_cap / 1000000).toFixed(1)}M</span>\n                    </div>\n                    <div className=\"stats-metric\">\n                      <span className=\"metric-label\">Total Market Cap:</span>\n                      <span className=\"metric-value\">à§³{(sector.total_market_cap / 1000000).toFixed(1)}M</span>\n                    </div>\n                    <div className=\"stats-metric\">\n                      <span className=\"metric-label\">Avg Volatility:</span>\n                      <span className=\"metric-value\">{(sector.avg_volatility * 100).toFixed(2)}%</span>\n                    </div>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n\n          <div className=\"card\">\n            <div className=\"card-header\">\n              <h3 className=\"card-title\">ð Top Performers by Sector</h3>\n            </div>\n            <div className=\"top-performers-grid\">\n              {sectorData.top_performers.map((sector) => (\n                <div key={sector.sector} className=\"performers-card\">\n                  <div className=\"performers-header\">\n                    <h4>{sector.sector}</h4>\n                    <span className=\"sector-emoji\">{getSectorIcon(sector.sector)}</span>\n                  </div>\n                  <div className=\"performers-list\">\n                    {sector.top_stocks.map((stock, index) => (\n                      <div key={stock.ticker} className=\"performer-item\">\n                        <div className=\"performer-rank\">\n                          <span className=\"rank-emoji\">\n                            {index === 0 ? 'ð¥' : index === 1 ? 'ð¥' : 'ð¥'}\n                          </span>\n                          <span className=\"performer-ticker\">{stock.ticker}</span>\n                        </div>\n                        <div className={`performer-return ${stock.return >= 0 ? 'positive' : 'negative'}`}>\n                          {stock.return >= 0 ? '+' : ''}{(stock.return * 100).toFixed(2)}%\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        </>\n      )}\n\n      <style jsx>{`\n        .sector-controls {\n          display: flex;\n          align-items: center;\n          gap: 1rem;\n        }\n\n        .sector-overview {\n          display: grid;\n          grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n          gap: 1rem;\n        }\n\n        .sector-card {\n          display: flex;\n          align-items: center;\n          gap: 1rem;\n          background: #f8f9fa;\n          border-radius: 8px;\n          padding: 1rem;\n          border-left: 4px solid #667eea;\n        }\n\n        .sector-icon {\n          font-size: 2rem;\n          min-width: 50px;\n          text-align: center;\n        }\n\n        .sector-info {\n          flex: 1;\n        }\n\n        .sector-name {\n          font-weight: 600;\n          color: #2c3e50;\n          margin-bottom: 0.25rem;\n        }\n\n        .sector-return {\n          font-size: 1.2rem;\n          font-weight: 700;\n          margin-bottom: 0.25rem;\n        }\n\n        .sector-return.positive {\n          color: #27ae60;\n        }\n\n        .sector-return.negative {\n          color: #e74c3c;\n        }\n\n        .sector-stocks {\n          font-size: 0.9rem;\n          color: #6c757d;\n        }\n\n        .chart-grid {\n          display: grid;\n          grid-template-columns: repeat(auto-fit, minmax(400px, 1fr));\n          gap: 1.5rem;\n        }\n\n        .chart-container {\n          margin: 1rem 0;\n          height: 400px;\n        }\n\n        .sector-stats-grid {\n          display: grid;\n          grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\n          gap: 1rem;\n        }\n\n        .stats-card {\n          background: #f8f9fa;\n          border-radius: 8px;\n          padding: 1rem;\n          border: 1px solid #dee2e6;\n        }\n\n        .stats-header {\n          display: flex;\n          justify-content: space-between;\n          align-items: center;\n          margin-bottom: 1rem;\n        }\n\n        .stats-sector {\n          font-weight: 600;\n          color: #2c3e50;\n          font-size: 1.1rem;\n        }\n\n        .stats-icon {\n          font-size: 1.5rem;\n        }\n\n        .stats-metrics {\n          display: flex;\n          flex-direction: column;\n          gap: 0.5rem;\n        }\n\n        .stats-metric {\n          display: flex;\n          justify-content: space-between;\n          align-items: center;\n        }\n\n        .metric-label {\n          color: #6c757d;\n          font-size: 0.9rem;\n        }\n\n        .metric-value {\n          font-weight: 600;\n          color: #2c3e50;\n        }\n\n        .top-performers-grid {\n          display: grid;\n          grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\n          gap: 1rem;\n        }\n\n        .performers-card {\n          background: #f8f9fa;\n          border-radius: 8px;\n          padding: 1rem;\n          border: 1px solid #dee2e6;\n        }\n\n        .performers-header {\n          display: flex;\n          justify-content: space-between;\n          align-items: center;\n          margin-bottom: 1rem;\n          padding-bottom: 0.5rem;\n          border-bottom: 1px solid #dee2e6;\n        }\n\n        .performers-header h4 {\n          margin: 0;\n          color: #2c3e50;\n        }\n\n        .sector-emoji {\n          font-size: 1.5rem;\n        }\n\n        .performers-list {\n          display: flex;\n          flex-direction: column;\n          gap: 0.75rem;\n        }\n\n        .performer-item {\n          display: flex;\n          justify-content: space-between;\n          align-items: center;\n          padding: 0.5rem;\n          background: white;\n          border-radius: 6px;\n        }\n\n        .performer-rank {\n          display: flex;\n          align-items: center;\n          gap: 0.5rem;\n        }\n\n        .rank-emoji {\n          font-size: 1.2rem;\n        }\n\n        .performer-ticker {\n          font-weight: 600;\n          color: #2c3e50;\n        }\n\n        .performer-return {\n          font-weight: 600;\n        }\n\n        .performer-return.positive {\n          color: #27ae60;\n        }\n\n        .performer-return.negative {\n          color: #e74c3c;\n        }\n\n        @media (max-width: 768px) {\n          .sector-controls {\n            flex-direction: column;\n            align-items: stretch;\n          }\n          \n          .chart-grid {\n            grid-template-columns: 1fr;\n          }\n          \n          .sector-overview {\n            grid-template-columns: 1fr;\n          }\n          \n          .sector-stats-grid {\n            grid-template-columns: 1fr;\n          }\n          \n          .top-performers-grid {\n            grid-template-columns: 1fr;\n          }\n        }\n      `}</style>\n    </div>\n  );\n};\n\n// Helper function to get sector icons\nconst getSectorIcon = (sector) => {\n  const sectorIcons = {\n    'Bank': 'ð¦',\n    'Pharmaceutical': 'ð',\n    'Food & Beverage': 'ð½ï¸',\n    'Textile': 'ð',\n    'Cement': 'ðï¸',\n    'Insurance': 'ð¡ï¸',\n    'Engineering': 'âï¸',\n    'IT': 'ð»',\n    'Telecoms': 'ð¡',\n    'Power': 'â¡',\n    'Paper': 'ð',\n    'Ceramic': 'ðº',\n    'Travel': 'âï¸',\n    'Miscellaneous': 'ð¦',\n    'Fuel & Power': 'â½',\n    'Jute': 'ð¾',\n    'Tannery': 'ð',\n    'Services': 'ð§',\n    'Financial Institution': 'ð°',\n    'Mutual Fund': 'ð'\n  };\n  \n  return sectorIcons[sector] || 'ð¢';\n};\n\nexport default SectorAnalysis;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}